@model Orders.Models.Order

@{
    ViewData["Title"] = "Edit";
}



<div class="col-11 mx-auto pt-0 p-0">
    <div class="card">
        <div class="card-header bg-success text-uppercase text-white" style="height: 45px;">
            <h4>Edit Order</h4>
        </div>
        <form asp-action="Edit">
            <div class="row">
                <div asp-validation-summary="ModelOnly" class="text-danger"></div>
                <div class="form-group">
                    <label asp-for="Number" class="control-label"></label>
                    <input asp-for="Number" class="form-control" />
                    <span asp-validation-for="Number" class="text-danger"></span>
                </div>
                <div class="form-group">
                    <label asp-for="Date" class="control-label"></label>
                    <input asp-for="Date" class="form-control" />
                    <span asp-validation-for="Date" class="text-danger"></span>
                </div>
                <div class="form-group">
                    <label asp-for="SupplierId" class="control-label"></label>
                    <select asp-for="SupplierId" class="form-control" asp-items="ViewBag.SupplierId"></select>
                </div>
                <div>
                    <table id="ItemsTable" class="table table-striped table-sm">
                        <thead>
                            <tr>
                                <th>
                                    Name
                                </th>
                                <th>
                                    Quantity
                                </th>
                                <th>
                                    Unit
                                </th>
                                <th>

                                </th>
                            </tr>
                        </thead>
                        <tbody>
                            @for (int i = 0; i < Model.OrderItems.Count; i++)
                            {
                                <tr>
                                    <td>
                                        @Html.EditorFor(m => m.OrderItems[i].Name, new
                                            {
                                                htmlAttributes = new
                                                {
                                                    @class =
                                                 "form-control"
                                                }
                                            })
                                    </td>
                                    <td>
                                        @Html.EditorFor(m => m.OrderItems[i].Quantity, new
                                            {
                                                htmlAttributes = new
                                                {
                                                    @class =
                                                 "form-control"
                                                }
                                            })
                                    </td>
                                    <td>
                                        @Html.EditorFor(m => m.OrderItems[i].Unit, new
                                            {
                                                htmlAttributes = new
                                                {
                                                    @class =
                                                 "form-control"
                                                }
                                            })

                                    </td>
                                    <td>
                                        @if(i!=Model.OrderItems.Count-1)
                                        {
                                            <button id="btnadd-@i" type="button" class="btn btn-sm btn-secondary invisible"
                                            onclick="AddItem(this)" style="left: 90%; position: absolute;">Add</button>
                                        <button id="btnremove-@i" type="button" class="btn btn-sm btn-danger visible"
                                            onclick="DeleteItem(this)" style="left: 90%; position: absolute;">Delete</button>
                                        }
                                        else{
                                            <button id="btnadd-@i" type="button" class="btn btn-sm btn-secondary visible"
                                            onclick="AddItem(this)" style="left: 90%; position: absolute;">Add</button>
                                        <button id="btnremove-@i" type="button" class="btn btn-sm btn-danger invisible"
                                            onclick="DeleteItem(this)" style="left: 90%; position: absolute;">Delete</button>
                                        }
                                        
                                    </td>
                                </tr>
                            }
                        </tbody>
                    </table>
                </div>
                <input type="hidden" id="hdnLastIndex" value="0">
                <div class="form-group">
                    <input type="submit" value="Edit" class="btn btn-primary" />
                </div>

            </div>
        </form>
    </div>
</div>


<div>
    <a asp-action="Index">Back to List</a>
</div>

@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }

<script type="text/javascript">

    function DeleteItem(btn) {
        var buttonId = btn.id;
        // Get the last character of the id and convert it to an integer
        var table = document.getElementById('ItemsTable');
        var rows = table.getElementsByTagName('tr');
        var index = parseInt(buttonId.charAt(buttonId.length - 1), 10);
        console.log(index)
        for (i = index + 1; i < table.rows.length; i++) {

            var elementsWithOrderItems_I = getElementsBySubstring('OrderItems_' + i);
            elementsWithOrderItems_I.forEach(function (element) {

                if (element) {
                    // Modify the name attribute by replacing i with i-1
                    var currentName = element.getAttribute("name");
                    var newName = currentName.replace(i, i - 1);
                    element.setAttribute("name", newName);

                    var currentId = element.getAttribute("id");
                    var newId = currentId.replace(i, i - 1);
                    element.setAttribute("id", newId);

                    
                } else {
                    
                }
            });
            var elementsWithbtnadd_I = getElementsBySubstring('btnadd-' + i);
            elementsWithbtnadd_I.forEach(function (element) {

                if (element) {

                    var currentId = element.getAttribute("id");
                    var newId = currentId.replace(i, i - 1);
                    element.setAttribute("id", newId);

                    
                } else {
                    
                }
            });
            var elementsWithbtnremove_I = getElementsBySubstring('btnremove-' + i);
            elementsWithbtnremove_I.forEach(function (element) {

                if (element) {

                    var currentId = element.getAttribute("id");
                    var newId = currentId.replace(i, i - 1);
                    element.setAttribute("id", newId);

                    
                } else {
                    
                }
            });

            @* var rowOuterHtml = rows[i].outerHTML;
            rowOuterHtml = rowOuterHtml.replaceAll('_' + i + '_', '_' + i - 1 + '_');
            rowOuterHtml = rowOuterHtml.replaceAll('[' + i + ']', '[' + i - 1 + ']');
            rowOuterHtml = rowOuterHtml.replaceAll('-' + i, '-' + i - 1);
            rows[i].innerHTML = rowOuterHtml *@
        }
        document.getElementById('hdnLastIndex').value = document.getElementById('hdnLastIndex').value - 1;

        $(btn).closest('tr').remove();

    }

    function getElementsBySubstring(substring) {
        // Use querySelectorAll with attribute selector
        var elements = document.querySelectorAll('[id*="' + substring + '"]');
        return elements;
    }





    function AddItem(btn) {

        var table = document.getElementById('ItemsTable');
        var rows = table.getElementsByTagName('tr');

        var rowOuterHtml = rows[rows.length - 1].outerHTML;

        var lastrowIdx = document.getElementById('hdnLastIndex').value;

        var nextrowIdx = eval(lastrowIdx) + 1;

        document.getElementById('hdnLastIndex').value = nextrowIdx;

        rowOuterHtml = rowOuterHtml.replaceAll('_' + lastrowIdx + '_', '_' + nextrowIdx + '_');
        rowOuterHtml = rowOuterHtml.replaceAll('[' + lastrowIdx + ']', '[' + nextrowIdx + ']');
        rowOuterHtml = rowOuterHtml.replaceAll('-' + lastrowIdx, '-' + nextrowIdx);


        var newRow = table.insertRow();
        newRow.innerHTML = rowOuterHtml;



        var btnAddID = btn.id;
        var btnDeleteid = btnAddID.replaceAll('btnadd', 'btnremove');

        var delbtn = document.getElementById(btnDeleteid);
        delbtn.classList.add("visible");
        delbtn.classList.remove("invisible");


        var addbtn = document.getElementById(btnAddID);
        addbtn.classList.remove("visible");
        addbtn.classList.add("invisible");

    }
</script>
}
